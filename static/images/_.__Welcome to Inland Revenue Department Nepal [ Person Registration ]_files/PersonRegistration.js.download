Ext.define('MyApp.controller.PersonRegistration', {
    extend: 'Ext.app.Controller',

    stores: [
        'Nationality',
        'DocType',
        'PerReg_TaxPayerProfession',
        'PerRegTaxPayerProfCat',
        'PerRegTaxPayerProfSubCat',
        'DistrictRegistration',
        'VCD_PersonP_str',
        'VCD_PersonT_str',
		'RelativeTypeStore',
		'IndividualRelativeStore',
		'ResidencyTypeStore',
		'MailingVDCStore',
		'Banks',
		'Branch',
		'AddressTypeStore'
    ],

    onBtnProfessionClick: function(button, e, eOpts) {

        if(button.up('form').getForm().isValid())
        {


            Ext.getStore('professionStore').add({
                ProfessionText:Ext.ComponentQuery.query('#txtProfession')[0].getValue(),
                FromDate:Ext.decode(AppWakeUpJSON).root.NepaliDate,
                ProfessionID:Ext.getStore('professionStore').getCount()+1
            });

            Ext.ComponentQuery.query('#txtProfession')[0].setValue();
        }
    },

    onBtnUpload_EpanClick: function(button, e, eOpts) {
    },

    onBtnSaveClick: function(button, e, eOpts) {
		var me = this;
		me.PPANValidation(function(err){
			if(err != '')
			{
				msg('WARNING',err.toString());
				return false;
			}
			else
			{
				me.SavePPAN(function(callback){
				//	console.log('callback',callback);
					if(callback.Success == true)
					{
						me.Reload();
					}
				});
			}
		});
    },
	checkFileType: function(file) {
        var flag = false;
		var ext_arr = ['jpg','JPG','jpeg','JPEG'];
		var filename = file.value;

		var fileSplit = filename.split('.');
		var fileExt = '';
		if (fileSplit.length > 1) {
		fileExt = fileSplit[fileSplit.length - 1];
		} 

		var ext_pos =ext_arr.indexOf(fileExt);
		if(parseInt(ext_pos) >= 0){

			flag = true;
		}

        if(!flag)
        {
           return false;
        }
        else
        {

            return true;
        }

    },

    onFilePhotoChange: function(filefield, value, eOpts) {
		
		 
		
		var uploaddoc = Ext.ComponentQuery.query('#filePhoto')[0];
		var uploadName=Ext.ComponentQuery.query('#filePhoto')[0].getValue();;
		if(this.checkFileType(uploaddoc))
		{
			var uploadName = uploadName.replace(/C:\\fakepath\\/g, '');
			var objSubmissionNo="";
			var persRez=Ext.getCmp('PersonRegistration');
			if(persRez.extraParam)
			{
				objSubmissionNo = persRez.extraParam.subNo;
			}

			Ext.getCmp('UploadControl').getForm().submit({
				url: '../Handlers/PhotoHandle/PHOTOUploader.ashx',
				params:{submissionNo:objSubmissionNo,formToken:Ext.get('frmToken').dom.innerHTML},
				waitMsg: 'Please wait',
				success: function(form,action) {
					Ext.getCmp('sespicid').setValue(action.result.msg);
					Ext.getCmp('imgPerson').setSrc('../Handlers/PhotoHandle/temp/'+objSubmissionNo+"/"+action.result.msg);
					Ext.create('MyApp.view.PictureCutter').show();
					$('.cropbox').attr('src','../Handlers/PhotoHandle/temp/'+objSubmissionNo+"/"+action.result.msg);
					$('.preview').attr('src','../Handlers/PhotoHandle/temp/'+objSubmissionNo+"/"+action.result.msg);
					Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

				},
				failure: function(form,action) {
				}
			});
		}
		else
		{
			Ext.ComponentQuery.query('#filePhoto')[0].reset();
			Ext.getCmp('sespicid').setValue('');
			Ext.getCmp('imgPerson').setSrc('resources/profile.gif');
			msg('WARNING','Please Upload JPG file only.');
			return false;
		}

    },

    onBtnProfessionClick: function(button, e, eOpts) {
        if(button.up('form').getForm().isValid())
        {
            Ext.getStore('professionStore').add({ProfessionText:Ext.ComponentQuery.query('#txtProfession')[0].getValue()});
            Ext.ComponentQuery.query('#txtProfession')[0].setValue();
        }
    },

    onBtnSubmitClick: function(button, e, eOpts) {
		var me = this;
		var personRegistration=Ext.getCmp('PersonRegistration');
		var submissionNo = '';
		var officeName = '';
		var taxpayerCategoryID = '';
		if(personRegistration.extraParam)
		{
			submissionNo = personRegistration.extraParam.subNo;
			officeName=personRegistration.extraParam.officeName;
			taxpayerCategoryID = personRegistration.extraParam.busTyp;
		}
		me.PPANValidation(function(err){
			
			var individualRelativeStore = Ext.getStore('IndividualRelativeStore');
			var fatherExists = individualRelativeStore.findExact('RelativeTypeId', '2');
			var motherExists = individualRelativeStore.findExact('RelativeTypeId', '3');
			var preferrerSms = Ext.ComponentQuery.query('#rdbAlertSMS')[0].getValue();
			var preferredAddressType =  Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getValue();
			var preferrerEmail = Ext.ComponentQuery.query('#rdbAlertEmail')[0].getValue();
			var individualPhoto = Ext.getCmp('sespicid').getValue()
			if(individualPhoto == "")
			{
				err+='Please upload Photo.<br>';
			}
			if(fatherExists == -1 && motherExists== -1)
			{
				err+='Either father\'s or mother\'s information is required.<br>';
			}
			
			if(preferredAddressType == "" || preferredAddressType == null)
			{
				err+='Please choose Preferred Alert Address Type.<br>';
			}
			
			
			if(!preferrerSms && !preferrerEmail)
			{
				err+='Please choose Preferred Alert Type.<br>';
			}
			else
			{
				var OTPmobileNo =  '';
				var OTPemailID = '';
				switch(preferredAddressType)
				{
					case "P":
						OTPmobileNo = Ext.ComponentQuery.query('#txtMobileNo')[0].getValue();
						OTPemailID = Ext.ComponentQuery.query('#txtEmailID')[0].getValue();
						break;
					case "T":
						OTPmobileNo = Ext.ComponentQuery.query('#txtTemporaryMobile')[0].getValue();
						OTPemailID = Ext.ComponentQuery.query('#txtTemporaryEmail')[0].getValue();
						break;
					case "M":
						OTPmobileNo = Ext.ComponentQuery.query('#txtMailingMobile')[0].getValue();
						OTPemailID = Ext.ComponentQuery.query('#txtMailingEmail')[0].getValue();
						break;
				}
				if(preferrerSms)
				{
					if(OTPmobileNo == '' || OTPmobileNo == null || OTPmobileNo.length != 10)
					{
						err+='Please provide mobile number of '+Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getRawValue()+'.<br>';
					}
				}
				if(preferrerEmail)
				{
					if(OTPemailID == '' || OTPemailID == null )
					{
						err+='Please provide email address of '+Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getRawValue()+'.<br>';
					}
				}
			}
		
		
			
			if(err != '')
			{
				msg('WARNING',err.toString());
				return false;
			}
			else
			{
				Ext.Msg.confirm('Confirm Action',
				'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?',
				function(btn) {
					if(btn == 'yes'){
						me.SavePPAN(function(callback){
						//	console.log('callback',callback);
							if(callback.Success == true)
							{
								if(taxpayerCategoryID =='P')
								{
									GenerateOTP(submissionNo,'REG_OTP',OTPmobileNo,OTPemailID,null,function(resp){
										//console.log('otpresp',resp);
										if(resp.success=="true")
										{
											var arrNTC = ['984','985','986'];
											var findProvider = OTPmobileNo.substring(0,3);
											var messageOTP = 'OTP sent to Email: '+OTPemailID;
											var flagNTC = 0; 
											flagNTC = arrNTC.indexOf(findProvider);
											
											//console.log('flagNTC',flagNTC);
											if(flagNTC >= 0)
											{
												Ext.ComponentQuery.query('#hdnMobileServiceProvider')[0].setValue('NTC');
												messageOTP = messageOTP+' and Mobile: '+OTPmobileNo+'.';
											}
											else
											{
												Ext.ComponentQuery.query('#hdnMobileServiceProvider')[0].setValue('');
												messageOTP = messageOTP+'.';
											}
											
											msg('ALERT',messageOTP+' Please enter valid OTP to submit application.',function(){
												var popupWindow = Ext.create('MyApp.view.OTPVerification',{
												});
												popupWindow.show();
												Ext.ComponentQuery.query('#txtOTPMobileNo')[0].setValue(OTPmobileNo);
												Ext.ComponentQuery.query('#txtOTPEmailID')[0].setValue(OTPemailID);
												Ext.ComponentQuery.query('#hdnOTPSubmittedFor')[0].setValue('REG_OTP');
												Ext.ComponentQuery.query('#txtSubmissionNo')[0].setValue(submissionNo);
												if(flagNTC == 0)
												{
													Ext.ComponentQuery.query('#txtOTPMobileNo')[0].hide();
												}
												else
												{
													Ext.ComponentQuery.query('#txtOTPMobileNo')[0].hide();
												}
												
											});
										}
										else
										{
											msg('FAILED',resp.message);
											return false;
										}
										
									});
									/*var popupWindow = Ext.create('MyApp.view.OTPVerification',{
									});
									popupWindow.show();
									Ext.ComponentQuery.query('#txtSubmissionNo')[0].setValue(submissionNo);
									Ext.ComponentQuery.query('#txtOTPMobileNo')[0].setValue(OTPmobileNo);
									Ext.ComponentQuery.query('#txtOTPEmailID')[0].setValue(OTPemailID);
									Ext.ComponentQuery.query('#hdnOTPSubmittedFor')[0].setValue('REG_OTP');*/
								}
							}
						});
					}
				});
			}
		});
    },
	
	SubmitAfterOTPVerification: function(submissionNo){
		var me =this;
		var submitMsg = waitMsg('Submitting. Please wait...');
		Ext.Ajax.request({
			url: '../Handlers/Registration/RegSubmissionNoHandler.ashx?method=SubmitRegistration',
			params:{submissionNo:submissionNo,formToken:Ext.get('frmToken').dom.innerHTML},
			success: function ( ressponse ) {
				submitMsg.hide();
				var respp = ressponse.responseText;
				var dta=Ext.decode(respp);
				if(dta.root.success=='true'||dta.root.success=='True'||dta.root.success)
				{
					var respMsg = '';
					if(Ext.getCmp('PersonRegistration').extraParam.busTyp == 'P')
						respMsg = 'तपाईको विवरण Submit भयो ।<b>'+ officeName +'</b> कार्यालयबाट Verify भएपछि (सामान्यतया एक दिन पछि) तपाईको विवरण भर्दा लिएको Login मा PAN No. प्राप्त गर्न सक्नु हुनेछ ।';
					else
						respMsg="Registration Information Saved And Submitted Successfully.<br /> <br /> Contact Office: <b>"+officeName+"</b>";
				
					msg("SUCCESS",respMsg,function(){
						me.Reload('N');
					});
				}
				else
				{
					me.submitMessage(dta.root);
				}
			},
			failure: function ( result, request ) {
				submitMsg.hide();
				msg("FAILURE","Registration Information Saved Successfully But Submission Failed.",function(){
					me.Reload();
				});
			}

		});
	},

    onPpan_printClick: function(button, e, eOpts) {
        var perReg=Ext.getCmp('PersonRegistration');
        var obj={submissionNo:perReg.extraParam.subNo,formToken:Ext.get('frmToken').dom.innerHTML};
        var url="../Reporting/Registration/ReportHandlers/PersonRegReportHandler.ashx";
        var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";
        OpenWindowWithPost(url,winOption,"NewFile",obj);
    },

    onPPAN_Reg_NextClick: function(button, e, eOpts) {

        var pan="";
        var businessTyp="";
        var businessSubTyp="";
        var submissionNo="";
        var val= "";
        var regFor="";
        epara=Ext.getCmp('PersonRegistration').extraParam;
        if(epara)
        {
            submissionNo = epara.subNo;
            businessTyp=epara.busTyp;
            businessSubTyp=epara.busSubTyp;
            val=epara.regFor;
            regFor=val;
            pan=epara.pan;
        }
		//console.log('epara',epara);
        var count=0;
        var msg="";
        var ppanAction="";  // A=add,R=readonly(disable edit)  in PPAN
		//console.log('val',val);
        var  uiConfig ={};
        if(val==1)  //PPAN
        {
            return;
        }
        else if(val==2)  //ITAX
        {
			if(epara.busTyp == 'I')
			{
				businessSubTyp = '01';
			}
            var parmms={};
            if(pan)
            {
                parmms= {subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor,pan:pan,TaxpayerType:businessSubTyp};
            }
            else
            {
                parmms = {subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor,TaxpayerType:businessSubTyp};
            }
			//console.log('epara',epara);
			//console.log('parmms',parmms);
            uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
            DynamicUI(uiConfig,function(){
                Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];
                BusRegNext.hide();


            },parmms);
        }
        else if(val==5)  //ITAX,VAT,EXCISE
        {
            uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
            DynamicUI(uiConfig,function(){
                Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];
                BusRegNext.show();


            },{subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor,TaxpayerType:businessSubTyp});
            }
            else if(val==6)  //ITAX,VAT
            {
                uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
                DynamicUI(uiConfig,function(){
                    Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                    Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                    var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];
                    BusRegNext.show();


                },{subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor,TaxpayerType:businessSubTyp});

                }
                else if(val==8)  //ITAX,EXCISE
                {
                    uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
                    DynamicUI(uiConfig,function(){
                        Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                        Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                        var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];
                        BusRegNext.show();


                    },{subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor,TaxpayerType:businessSubTyp});
                    }

                    /////


    },

    onPerReg_ProfCatCollapse: function(field, eOpts) {


         var subCat=Ext.ComponentQuery.query('#PerReg_ProfSubCat')[0];
        subCat.setValue('');
        var combobox=Ext.ComponentQuery.query('#PerReg_ProfCat')[0];
        var value = combobox.getValue();

        if(value)
        {
            
			var record = combobox.findRecord(combobox.valueField || combobox.displayField, value);
            //var index = combobox.store.indexOf(record);
			var subCatsData=record.data;
			
			var subCats=subCatsData.TaxPayerProfessionSubCat;
            
            var PerRegTaxPayerProfSubCatStore=Ext.getStore('PerRegTaxPayerProfSubCat');
            PerRegTaxPayerProfSubCatStore.removeAll();
			PerRegTaxPayerProfSubCatStore.add(subCats);
            //if(store.getAt(index))
            //{
                //store1.loadData(store.getAt(index).get('TaxPayerProfessionSubCat'));
           // }
			 
        }
    },

    onPerReg_btnAddProfClick: function(button, e, eOpts) {
        var submissionNo=Ext.getCmp('PersonRegistration').extraParam.subNo;
        var profCat=Ext.ComponentQuery.query('#PerReg_ProfCat')[0];
        var profSubCat=Ext.ComponentQuery.query('#PerReg_ProfSubCat')[0];
        var certificateNo=Ext.ComponentQuery.query('#PerReg_ProfFromDate')[0];//CertificateNo
        var profStore=Ext.getStore('PerReg_TaxPayerProfession');
        if(!profCat.getValue() || !profSubCat.getValue() )
        {
            var cnt=1;
            var errMsg="";

            errMsg= !profCat.getValue()? errMsg+ cnt++ + ") Select Profession Category. <br/>":errMsg;
            errMsg= !profSubCat.getValue()? errMsg+  cnt++ + ") Select Profession Sub Category. <br/>":errMsg;
            
            msg("WARNING",errMsg);
            return false;
        }
        

        var recordIndex = profStore.findBy(
        function(record, id){
            if( record.get('ProfCatID') ===profCat.getValue() &&
            record.get('ProfSubCatID') === profSubCat.getValue() )
            {
                return true;
            }
            else
            {
                return false;
            }

        });

        if(recordIndex>=0)
        {
            msg('WARNING','This profession already exists .<br/>');
        }
        else
        {
            var profession={
                SubmissionNo:submissionNo,
                ProfCatID:profCat.getValue(),
                ProfCatName:profCat.getRawValue(),
                ProfSubCatID:profSubCat.getValue(),
                ProSubCatName:profSubCat.getRawValue(),
                CertificateNo:certificateNo.getValue(),
                Action:'A'
            };
            profStore.add(profession);
            profCat.reset();
            profSubCat.reset();
            certificateNo.reset();
        }

    },

    onFormAfterRender: function(component, eOpts) {
        var me=this;
        me.Reload();
    },
	
	LoadPersonDetails: function(getPersonUrl,getPersonParams){
		var me  =this;
		var loadBank = waitMsg('Loading...');
		Ext.Ajax.request({
			url: '../Handlers/Common/BankHandler.ashx?method=LoadBank',
			params:{},
			success: function ( result, request ) {
				var data = Ext.decode(result.responseText);
				loadBank.hide();
				Ext.getStore('Banks').add(data.root);
			},
			failure: function ( result, request ) {
				loadBank.hide();
				msg('ERROR','Could not fetch banks.');
			}

		});
		var waitmsg=waitMsg('Loading Nationality .....');
		Ext.Ajax.request({
			url: '../Handlers/Common/NationalityHandler.ashx?method=LoadNationality',
			params:{formToken:Ext.get('frmToken').dom.innerHTML},
			success: function ( result, request ) {		
				waitmsg.hide();
				Ext.getStore('Nationality').add(Ext.decode(result.responseText).root);
				Ext.ComponentQuery.query('#cboNationality')[0].setValue('np');
				
				waitmsg=waitMsg('Loading Districts .....');
				Ext.Ajax.request({
					url: '../Handlers/Common/DistrictTypeHandler.ashx?method=LoadDistrictType',
					params:{choose:'Y',formToken:Ext.get('frmToken').dom.innerHTML},
					success: function ( result, request ) {		
						waitmsg.hide();
						Ext.getStore('DistrictRegistration').add(Ext.decode(result.responseText).root);
						
						waitmsg=waitMsg('Loading Professions .....');
						Ext.Ajax.request({
							url: '../Handlers/Common/TaxpayerProfessionCatHandler.ashx?method=GetTaxPayerProfessionCat',
							params:{formToken:Ext.get('frmToken').dom.innerHTML},
							success: function ( result, request ) {		
								waitmsg.hide();
								Ext.getStore('PerRegTaxPayerProfCat').add(Ext.decode(result.responseText).root);
								
								waitmsg=waitMsg('Loading Personal Information .....');
								Ext.Ajax.request({
									url: getPersonUrl,
									params:getPersonParams,
									success: function ( result, request ) {
										waitmsg.hide();
										var obj = Ext.decode(result.responseText);
										if(obj.root != null)
										{
											var individualDetails = obj.root;
										//	console.log('individualDetails',individualDetails);
											Ext.ComponentQuery.query('#PersonalPanAction')[0].setValue(individualDetails.Action=="E"?"E":"A");
											Ext.ComponentQuery.query('#txtPersonFNameNep')[0].setValue(individualDetails.FName_Nepali);
											Ext.ComponentQuery.query('#txtPersonMNameNep')[0].setValue(individualDetails.MName_Nepali);
											Ext.ComponentQuery.query('#txtPersonLNameNep')[0].setValue(individualDetails.LName_Nepali);
											Ext.ComponentQuery.query('#txtPersonFNameEng')[0].setValue(individualDetails.FName_Eng);
											Ext.ComponentQuery.query('#txtPersonMNameEng')[0].setValue(individualDetails.MName_Eng);
											Ext.ComponentQuery.query('#txtPersonLNameEng')[0].setValue(individualDetails.LName_Eng);
											Ext.ComponentQuery.query('#txtDob')[0].setValue(individualDetails.DOB);
											Ext.ComponentQuery.query('#cboNationality')[0].setValue(individualDetails.Nationality == null?'np':individualDetails.Nationality);
											Ext.ComponentQuery.query('#ddlResidencyType')[0].setValue(individualDetails.ResidencyType);
											Ext.ComponentQuery.query('[name=rdogender]')[0].setValue(individualDetails.Sex);
											Ext.ComponentQuery.query('[name=rdoDate]')[0].setValue('BS');
											if(individualDetails.photo)
											{
												Ext.getCmp('imgPerson').setSrc('../../Handlers/PhotoHandle/temp/'+individualDetails.SubmissionNo+"/"+individualDetails.photo);
												Ext.getCmp('sespicid').setValue(individualDetails.photo);
											}
											if(individualDetails.LstDocument)
											{
												me.LoadDocumentTypes(individualDetails.LstDocument,function(obj){});
											}
											if(individualDetails.TaxpayerProfessions)
											{
												Ext.getStore('PerReg_TaxPayerProfession').loadData(individualDetails.TaxpayerProfessions);
											}
											if(individualDetails.IndividualRelativeDetails != null)
											{
												var relatives = individualDetails.IndividualRelativeDetails;
												if(individualDetails.IndividualRelativeDetails.length > 0)
												{
													Ext.getStore('IndividualRelativeStore').add(individualDetails.IndividualRelativeDetails);
												}
											}
											if(individualDetails.IndividualSourceOfIncomes)
											{
												var sourceofIncome = individualDetails.IndividualSourceOfIncomes;
												if(sourceofIncome.length > 0)
												{
													for(var i=0; i<sourceofIncome.length; i++)
													{
														if(sourceofIncome[i].SourceOfIncomeTypeId == "01")
														{
															Ext.ComponentQuery.query('#chkSourceOfIncomeEmployment')[0].setValue(true);
														}
														if(sourceofIncome[i].SourceOfIncomeTypeId == "02")
														{
															Ext.ComponentQuery.query('#chkSourceOfIncomeInvestment')[0].setValue(true);
														}
														if(sourceofIncome[i].SourceOfIncomeTypeId == "03")
														{
															Ext.ComponentQuery.query('#chkSourceOfIncomeBusiness')[0].setValue(true);
														}
														if(sourceofIncome[i].SourceOfIncomeTypeId == "04")
														{
															Ext.ComponentQuery.query('#chkSourceOfIncomeOccupation')[0].setValue(true);
														}
														if(sourceofIncome[i].SourceOfIncomeTypeId == "05")
														{
															Ext.ComponentQuery.query('#chkSourceOfIncomeOthers')[0].setValue(true);
															Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].show(true);
															Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].setValue(sourceofIncome[i].SourceOfIncomeTypeDesc);
														}
													}
												}
											}
											if(individualDetails.PermanentAddress != null)
											{
												var permanentAddrss= individualDetails.PermanentAddress.Address;
												if(individualDetails.Nationality == 'np' )
												{
													
													var locationType=permanentAddrss.LocationType;
													if(locationType=='MM')
													{
														Ext.ComponentQuery.query('#PerRegRerm_LocationType1')[0].setValue(true);
													}
													else if(locationType=='SM')
													{
														Ext.ComponentQuery.query('#PerRegRerm_LocationType2')[0].setValue(true);
													}
													else if(locationType=='MN')
													{
														Ext.ComponentQuery.query('#PerRegRerm_LocationType3')[0].setValue(true);
													}
													else if(locationType=='RM')
													{
														Ext.ComponentQuery.query('#PerRegRerm_LocationType4')[0].setValue(true);
													}
												
													Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].setValue(permanentAddrss.DistrictCode);
													Ext.getCmp('PersonRegistration').extraParam.PermanentAddressSno=permanentAddrss.AddressSNO;
													Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].setValue(permanentAddrss.HouseNo);
													Ext.ComponentQuery.query('#txtPermanentWard')[0].setValue(permanentAddrss.WardNo);
													Ext.ComponentQuery.query('#txtPermanentTole')[0].setValue(permanentAddrss.StreetName);
													
													Ext.ComponentQuery.query('#txtPermanentToleEng')[0].setValue(permanentAddrss.StreetNameEng);
													

													LoadVDCMunicipalities(permanentAddrss.DistrictCode, permanentAddrss.LocationType, null, function (obj){
														Ext.getStore('VCD_PersonP_str').removeAll();
														Ext.getStore('VCD_PersonP_str').add(obj.root);
														Ext.ComponentQuery.query('#txtPermanentArea')[0].setValue(permanentAddrss.AreaCode);

														Ext.ComponentQuery.query('#txtEmailID')[0].setValue(permanentAddrss.Email);
														Ext.ComponentQuery.query('#txtPhoneNo')[0].setValue(permanentAddrss.Telephone);
														Ext.ComponentQuery.query('#txtMobileNo')[0].setValue(permanentAddrss.Mobile);
														Ext.ComponentQuery.query('#txtFax')[0].setValue(permanentAddrss.Fax);
														Ext.ComponentQuery.query('#txtPOBNo')[0].setValue(permanentAddrss.PoBox);
														Ext.ComponentQuery.query('#txtWebsite')[0].setValue(permanentAddrss.Website);
														Ext.ComponentQuery.query('#txtPermanentVdcEng')[0].setValue(permanentAddrss.PoBox);
														if(individualDetails.PreferredAlertService != null)
														{
															var preferredService = individualDetails.PreferredAlertService;
															if(preferredService.length >0)
															{
																Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].setValue(preferredService[0].AddressType);
																for(var a = 0; a < preferredService.length;a++)
																{
																	if(preferredService[a].ServiceTypeName == 'SMS')
																	{
																		Ext.ComponentQuery.query('#rdbAlertSMS')[0].setValue(true);
																	}
																	else
																	{
																		Ext.ComponentQuery.query('#rdbAlertEmail')[0].setValue(true);
																	}
																}
															}
														}	
														Ext.ComponentQuery.query('#txtPermanentVdc')[0].setValue(permanentAddrss.VdcTownCode);

													});
												}
												if(individualDetails.Nationality != 'np' )
												{
													Ext.ComponentQuery.query('#txtState')[0].setValue(permanentAddrss.State);
													Ext.ComponentQuery.query('#txtCity')[0].setValue(permanentAddrss.VdcTown);
													Ext.ComponentQuery.query('#txtPermanentToleEngOther')[0].setValue(permanentAddrss.StreetNameEng);
													Ext.ComponentQuery.query('#txtEmailIDOther')[0].setValue(permanentAddrss.Email);
													Ext.ComponentQuery.query('#txtPhoneNoOther')[0].setValue(permanentAddrss.Telephone);
													Ext.ComponentQuery.query('#txtMobileNoOther')[0].setValue(permanentAddrss.Mobile);
													Ext.ComponentQuery.query('#txtFaxOther')[0].setValue(permanentAddrss.Fax);
													Ext.ComponentQuery.query('#txtPOBNoOther')[0].setValue(permanentAddrss.PoBox);
													Ext.ComponentQuery.query('#txtWebsiteOther')[0].setValue(permanentAddrss.Website);
													Ext.ComponentQuery.query('#txtZipCodeOther')[0].setValue(permanentAddrss.ZipCode);
												}
											}
											if(individualDetails.TemporaryAddress != null)
											{
												var tempoAddress= individualDetails.TemporaryAddress.Address;
												var locationType=tempoAddress.LocationType;
												if(locationType=='MM')
												{
													Ext.ComponentQuery.query('#PerRegTemp_LocationType1')[0].setValue(true);
												}
												else if(locationType=='SM')
												{
													Ext.ComponentQuery.query('#PerRegTemp_LocationType2')[0].setValue(true);
												}
												else if(locationType=='MN')
												{
													Ext.ComponentQuery.query('#PerRegTemp_LocationType3')[0].setValue(true);
												}
												else if(locationType=='RM')
												{
													Ext.ComponentQuery.query('#PerRegTemp_LocationType4')[0].setValue(true);
												}
												LoadVDCMunicipalities(tempoAddress.DistrictCode, locationType, null, function (obj) {
													Ext.getStore('VCD_PersonT_str').add(obj.root);
													Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setValue(tempoAddress.DistrictCode);
													Ext.getCmp('PersonRegistration').extraParam.TemporaryAddressSno=tempoAddress.AddressSNO;
													Ext.ComponentQuery.query('#txtTemporaryArea')[0].setValue(tempoAddress.AreaCode);
													Ext.ComponentQuery.query('#hdnaddressSno')[0].setValue(tempoAddress.AddressSNO);
													Ext.ComponentQuery.query('#txtTemporaryEmail')[0].setValue(tempoAddress.Email);
													Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].setValue(tempoAddress.Telephone);
													Ext.ComponentQuery.query('#txtTemporaryMobile')[0].setValue(tempoAddress.Mobile);
													Ext.ComponentQuery.query('#txtTemporaryFax')[0].setValue(tempoAddress.Fax);
													Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].setValue(tempoAddress.PoBox);
													Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].setValue(tempoAddress.Website);
													Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setValue(tempoAddress.HouseNo);
													Ext.ComponentQuery.query('#txtTemporaryWard')[0].setValue(tempoAddress.WardNo);
													Ext.ComponentQuery.query('#txtTemporaryTole')[0].setValue(tempoAddress.StreetName);
													
													if(individualDetails.PreferredAlertService != null)
													{
														var preferredService = individualDetails.PreferredAlertService;
														if(preferredService.length >0)
														{
															Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].setValue(preferredService[0].AddressType);
															for(var a = 0; a < preferredService.length;a++)
															{
																if(preferredService[a].ServiceTypeName == 'SMS')
																{
																	Ext.ComponentQuery.query('#rdbAlertSMS')[0].setValue(true);
																}
																else
																{
																	Ext.ComponentQuery.query('#rdbAlertEmail')[0].setValue(true);
																}
															}
														}
													}	
													Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setValue(tempoAddress.VdcTownCode);
												});
											}
											if(individualDetails.MailingAddress != null)
											{
												var mailaddress = individualDetails.MailingAddress.Address;
												if(mailaddress.LocationType=='MM')
												{
													Ext.ComponentQuery.query('#rdbMailingLocationLocationType1')[0].setValue(true);
												}
												else if(mailaddress.LocationType=='SM')
												{
													Ext.ComponentQuery.query('#rdbMailingLocationType2')[0].setValue(true);
												}
												else if(mailaddress.LocationType=='MN')
												{
													Ext.ComponentQuery.query('#rdbMailingLocationType3')[0].setValue(true);
												}
												else if(mailaddress.LocationType=='VD')
												{
													Ext.ComponentQuery.query('#rdbMailingLocationType4')[0].setValue(true);
												}
												LoadVDCMunicipalities(mailaddress.DistrictCode, mailaddress.LocationType, null, function (obj){
													Ext.getStore('MailingVDCStore').add(obj.root);
													Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].setValue(mailaddress.DistrictCode);
													Ext.ComponentQuery.query('#txtMailingHouseNo')[0].setValue(mailaddress.HouseNo);
													Ext.ComponentQuery.query('#txtMailingWard')[0].setValue(mailaddress.WardNo);
													Ext.ComponentQuery.query('#txtMailingTole')[0].setValue(mailaddress.StreetName);
													Ext.ComponentQuery.query('#txtMailingArea')[0].setValue(mailaddress.AreaCode);
													Ext.ComponentQuery.query('#hdnaddressSno')[0].setValue(mailaddress.AddressSNO);
													Ext.ComponentQuery.query('#txtMailingEmail')[0].setValue(mailaddress.Email);
													Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].setValue(mailaddress.Telephone);
													Ext.ComponentQuery.query('#txtMailingMobile')[0].setValue(mailaddress.Mobile);
													Ext.ComponentQuery.query('#txtMailingFax')[0].setValue(mailaddress.Fax);
													Ext.ComponentQuery.query('#txtMailingWebsite')[0].setValue(mailaddress.Website);
													Ext.ComponentQuery.query('#txtMailingPOBNo')[0].setValue(mailaddress.PoBox);
													Ext.ComponentQuery.query('#txtMailingVdc')[0].setValue(mailaddress.VdcTownCode);
													
												});
												if(individualDetails.PreferredAlertService != null)
												{
													var preferredService = individualDetails.PreferredAlertService;
													if(preferredService.length >0)
													{
														Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].setValue(preferredService[0].AddressType);
														for(var a = 0; a < preferredService.length;a++)
														{
															if(preferredService[a].ServiceTypeName == 'SMS')
															{
																Ext.ComponentQuery.query('#rdbAlertSMS')[0].setValue(true);
															}
															else
															{
																Ext.ComponentQuery.query('#rdbAlertEmail')[0].setValue(true);
															}
														}
													}
												}	
											}		
											if(individualDetails.IndividualBankAccInformation != null)
											{
												Ext.ComponentQuery.query('#txtIndividualBankAccNo')[0].setValue(individualDetails.IndividualBankAccInformation.BankAccountNo);
												var loadBank = waitMsg('Loading...');
												Ext.Ajax.request({
													url: '../Handlers/Common/BranchHandler.ashx?method=LoadBranch',
													params:{BankCode: individualDetails.IndividualBankAccInformation.BankCode, BrnStatus: 'Y'},
													success: function ( result, request ) {
														var data = Ext.decode(result.responseText);
														loadBank.hide();
														Ext.getStore('Branch').add(data.root);
														Ext.ComponentQuery.query('#ddlIndividualBankBranch')[0].setValue(individualDetails.IndividualBankAccInformation.BankBranchCode);
														Ext.ComponentQuery.query('#ddlIndividualBank')[0].setValue(individualDetails.IndividualBankAccInformation.BankCode);
													},
													failure: function ( result, request ) {
														loadBank.hide();
														msg('ERROR','Could not fetch bank branches.');
													}

												});
											}
																									
										}
									},
									failure:function(result, request)
									{
										waitmsg.hide();
										msg('WARNING','Could Not Load Individual Information.');
										return;
									}
								});
								
							},
							failure:function(result, request)
							{
								waitmsg.hide();
								msg('WARNING','Could Not Load Professions.');
								return;
							}
						});
					},
					failure:function(result, request)
					{
						waitmsg.hide();
						msg('WARNING','Could Not Load Districts.');
						return;
					}
				});
				
			},
			failure:function(result, request)
			{
				waitmsg.hide();
				msg('WARNING','Could Not Load Nationality.');
				return;
			}
		});
	},
	

    Reload: function(checkStatusYN) {
        var me=this;
		var personRegistration = Ext.getCmp('PersonRegistration');
		var submissionNumber = '';
		var pan = '';
		var busType = '';
		var regFor ;
		var getPersonUrl = '';
		if(personRegistration.extraParam)
        {
			busType = personRegistration.extraParam.busTyp;
			regFor = personRegistration.extraParam.regFor;
			pan = personRegistration.extraParam.pan;
			//console.log('pan',pan);
			if(regFor==2||regFor==3||regFor==4||regFor==5||regFor==6||regFor==7||regFor==8)
			{
				Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].enable();
				Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].show();
			}
			else
			{
				Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].disable();
				Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].hide();
			}
			
            if(personRegistration.extraParam.subNo)
            {
				submissionNumber = personRegistration.extraParam.subNo;
                Ext.ComponentQuery.query('#SubmissionNoText')[0].setText(submissionNumber);
				if(pan != '' && pan != null)
				{
					getPersonUrl = '../Handlers/Registration/PersonEPanHandler.ashx?method=GetPersonEPanFromCentral';
					getPersonParams = {pan:pan,formToken:Ext.get('frmToken').dom.innerHTML};
					Ext.ComponentQuery.query('#btnSave')[0].disable();
					Ext.ComponentQuery.query('#btnSubmit')[0].disable();
					Ext.ComponentQuery.query('#btnCancel')[0].disable();
					Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].enable();
					Ext.ComponentQuery.query('#btnResetPermAddress')[0].disable();
					Ext.ComponentQuery.query('#btnResetTempAddress')[0].disable();
					Ext.ComponentQuery.query('#btnResetMailingAddress')[0].disable();
					Ext.ComponentQuery.query('#PerReg_btnAddProf')[0].disable();
					Ext.ComponentQuery.query('#btnAddRelatives')[0].disable();
				}
				else
				{
					getPersonUrl = '../Handlers/Registration/PersonEPanHandler.ashx?method=GetPersonEPan';
					getPersonParams = {submissionNo:submissionNumber,formToken:Ext.get('frmToken').dom.innerHTML};
				}
            }
			else
            {
                Ext.ComponentQuery.query('#SubmissionNoText')[0].setText("");
            }
            
			
		}
		me.ClearControls(function(bool){
			if(bool)
			{
				var checkSubmitted = waitMsg('Loading...');
				Ext.Ajax.request({
                    url: '../Handlers/Registration/RegistrationsForHandler.ashx?method=CheckSubmissionNoStatus',
                    params:{SubmissionNo:submissionNumber,SubmittedFor: 'REG',formToken:Ext.get('frmToken').dom.innerHTML},
                    success: function ( result, request ) {
						checkSubmitted.hide();
                        var rsp = Ext.decode(result.responseText);
						//console.log('rsp',rsp);
						if(rsp.success !== 'true')
						{
							msg('FAILED',rsp.message);
							return false;
						}
						else
						{
							if(rsp.root.Status !==  'N')
							{
								Ext.ComponentQuery.query('#btnSave')[0].disable();
								Ext.ComponentQuery.query('#btnSubmit')[0].disable();
								Ext.ComponentQuery.query('#btnCancel')[0].disable();
								Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].enable();
								Ext.ComponentQuery.query('#btnResetPermAddress')[0].disable();
								Ext.ComponentQuery.query('#btnResetTempAddress')[0].disable();
								Ext.ComponentQuery.query('#btnResetMailingAddress')[0].disable();
								Ext.ComponentQuery.query('#PerReg_btnAddProf')[0].disable();
								Ext.ComponentQuery.query('#btnAddRelatives')[0].disable();
							}
							if(personRegistration.extraParam.busTyp == 'P')
							{
								Ext.ComponentQuery.query('#rdbAlertSMS')[0].setValue(true);
								Ext.ComponentQuery.query('#rdbAlertEmail')[0].setValue(true);
								Ext.ComponentQuery.query('#rdbAlertSMS')[0].setReadOnly(true);
								Ext.ComponentQuery.query('#rdbAlertEmail')[0].setReadOnly(true);
								if(rsp.root.Status !==  'N' && checkStatusYN != 'N')
								{
									msg('ALERT',rsp.root.Message,function(){
										me.LoadPersonDetails(getPersonUrl,getPersonParams);
									});
								}
								else
								{
									me.LoadPersonDetails(getPersonUrl,getPersonParams);
								}
							}
							else
							{
								Ext.ComponentQuery.query('#rdbAlertSMS')[0].setReadOnly(false);
								Ext.ComponentQuery.query('#rdbAlertEmail')[0].setReadOnly(false);
								me.LoadPersonDetails(getPersonUrl,getPersonParams);
							}
						}
					},
                    failure:function(result, request)
                    {
                        waitmsg.hide();
                        msg('WARNING','Could Not Load Personal Details.');
                        return;
                    }
                });
			}
		});

    },

    submitMessage: function(obj) {
        var winPopup = Ext.create('MyApp.view.SubmitError',{
            autoScroll:true,
            width:700,
            height:500,

            draggable:true,
            maximizable:true,
            minimizable:true,
            resizable:false,
            modal:true,
            title:"",
            y:80,
            layout:'fit'
        });

        winPopup.extraParam={param:obj};
        winPopup.show();

    },

    LoadDocumentTypes: function(documents, callback) {
        var obj='Y';
		var DocTypeStore = Ext.getStore('DocType');
        DocTypeStore.removeAll();
        DocTypeStore.add(documents);
		callback(obj);
		
    },
	onCboNationalityChange: function(field, newValue, oldValue, eOpts) {
		var type = Ext.ComponentQuery.query('#cboNationality')[0].getValue();
		var addressTypeStore = Ext.getStore('AddressTypeStore');
		if(field.getValue() !== "np")
		{
			Ext.ComponentQuery.query('#PermanentOtherCountry')[0].show();
			Ext.ComponentQuery.query('#Permanent')[0].hide();
			Ext.ComponentQuery.query('#chkSameAddTemp')[0].disable();
			Ext.ComponentQuery.query('#chkSameAddMailing')[0].disable();
			Ext.ComponentQuery.query('#ddlResidencyType')[0].setValue('');
			addressTypeStore.filter(function(item){
				return item.get("TypeCode")!= 'P';
			});
		}
		else
		{
			Ext.ComponentQuery.query('#ddlResidencyType')[0].setValue('R');
			Ext.ComponentQuery.query('#PermanentOtherCountry')[0].hide();
			Ext.ComponentQuery.query('#Permanent')[0].show();
			Ext.ComponentQuery.query('#chkSameAddTemp')[0].enable();
			Ext.ComponentQuery.query('#chkSameAddMailing')[0].enable();
			addressTypeStore.clearFilter();
		}
		
	},
	onBtnAddRelativesClick: function(button, e, eOpts) {
		var relativeTypeID = Ext.ComponentQuery.query('#ddlRelativeType')[0].getValue();
		var relativePan = Ext.ComponentQuery.query('#txtRelativePan')[0].getValue();
		var relativeFirstNameNep = Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].getValue();
		var relativeMiddleNameNep = Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].getValue();
		var relativeLastNameNep = Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].getValue();
		var relativeFirstNameEng = Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].getValue();
		var relativeMiddleNameEng = Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].getValue();
		var relativeLastNameEng = Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].getValue();
		var relativeCitizenshipNo = Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].getValue();
		var relativeContactNo = Ext.ComponentQuery.query('#txtRelativeContactNo')[0].getValue();
		var relationTypeDesc = Ext.ComponentQuery.query('#ddlRelativeType')[0].getRawValue();
		var err ='';
		if(relativeTypeID == null || relativeTypeID == '')
		{
			msg('WARNING','कृपया नाता को किसिम छान्नुहोस्');
			return false;
		}
		if(relativeFirstNameNep == null || relativeFirstNameNep == '')
		{
			err = err + 'कृपया '+relationTypeDesc+'को पहिलो नाम लेख्नुहोस| <br>';
		}
		if(relativeLastNameNep == null || relativeLastNameNep == '')
		{
			err = err + 'कृपया '+relationTypeDesc+'को थर लेख्नुहोस| <br>';
		}
		if(relativeFirstNameEng == null || relativeFirstNameEng == '')
		{
			err = err + 'कृपया '+relationTypeDesc+'को First Name लेख्नुहोस| <br>';
		}
		if(relativeLastNameEng == null || relativeLastNameEng == '')
		{
			err = err + 'कृपया '+relationTypeDesc+'को Last Name लेख्नुहोस| <br>';
		}
		if(err != '')
		{
			msg('WARNING',err.toString());
			return false;
		}
		else
		{
			var selectedRelative = Ext.ComponentQuery.query('#grdRelativeInformation')[0].getSelectionModel().getSelection();
			if(selectedRelative.length === 1)
			{
				selectedRelative[0].data.RelativeCitizenshipNo = relativeCitizenshipNo;
				selectedRelative[0].data.RelativeFirstNameEng = relativeFirstNameEng;
				selectedRelative[0].data.RelativeFirstNameNep = relativeFirstNameNep;
				selectedRelative[0].data.RelativeLastNameEng = relativeLastNameEng;
				selectedRelative[0].data.RelativeLastNameNep = relativeLastNameNep;
				selectedRelative[0].data.RelativeMiddleNameEng = relativeMiddleNameEng;
				selectedRelative[0].data.RelativeMiddleNameNep = relativeMiddleNameNep;
				selectedRelative[0].data.RelativePAN = relativePan;
				selectedRelative[0].data.RelativePhone = relativeContactNo;
				selectedRelative[0].data.RelativeTypeId = relativeTypeID;
				selectedRelative[0].data.RelativeTypeDesc = Ext.ComponentQuery.query('#ddlRelativeType')[0].getRawValue();
				Ext.ComponentQuery.query('#grdRelativeInformation')[0].getView().refresh();
				Ext.ComponentQuery.query('#grdRelativeInformation')[0].getSelectionModel().deselectAll();
			}
			else
			{
				var individualRelativeStore =  Ext.getStore('IndividualRelativeStore');
				if(individualRelativeStore.count() > 0)
				{
					for(var i = 0; i<individualRelativeStore.count();i++)
					{
						if(individualRelativeStore.data.items[i].data.RelativeTypeId == relativeTypeID)
						{
							msg('WARNING',relationTypeDesc+'  को Details भैसकेको छ |<br>');
							return false;
						}
					}
				}
				var objRelative = {
					RelativeTypeId : relativeTypeID,
					RelativeFirstNameNep:relativeFirstNameNep,
					RelativeTypeDesc: Ext.ComponentQuery.query('#ddlRelativeType')[0].getRawValue(),
					RelativeMiddleNameNep: relativeMiddleNameNep,
					RelativeLastNameNep:relativeLastNameNep,
					RelativeFirstNameEng:relativeFirstNameEng,
					RelativeMiddleNameEng:relativeMiddleNameEng,
					RelativeLastNameEng:relativeLastNameEng,
					RelativePAN:relativePan,
					RelativeCitizenshipNo:relativeCitizenshipNo,
					RelativePhone:relativeContactNo
				};
				individualRelativeStore.add(objRelative);
			}
			
			Ext.ComponentQuery.query('#ddlRelativeType')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativePan')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setValue('');
			Ext.ComponentQuery.query('#txtRelativeContactNo')[0].setValue('');
			
			Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setReadOnly(false);
			
		}
	},
	onChkSourceOfIncomeOthersChange: function(field, newValue, oldValue, eOpts) {
		if(newValue === true)
		{
			Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].show();
			Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].setValue('');
		}
		else
		{
		   Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].hide();
		   Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].setValue('');
		}
    },
	
	onTxtRelativePanBlur: function(field, eOpts) {
		Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setValue('');
		Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setValue('');
		Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setValue('');
		
		Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].setValue('');
		Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setValue('');
		Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setValue('');
		Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setReadOnly(false);
		Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setReadOnly(false);
		Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setReadOnly(false);
		Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].setReadOnly(false);
		Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setReadOnly(false);
		Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setReadOnly(false);
		Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setReadOnly(false);
		if(field.getValue() != null && field.getValue() != '')
		{
			var loadPan = waitMsg("Loading...");
			Ext.Ajax.request({
				url: '../Handlers/Registration/PersonEPanHandler.ashx',
				params: {
					method:'GetPersonEPanFromCentral',pan:field.getValue()
				},
				success: function(response){
					loadPan.hide();
					var obj =Ext.decode(response.responseText);
					if(obj.root.FName_Nepali != null)
					{
						Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setValue(obj.root.FName_Nepali);
						Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setValue(obj.root.MName_Nepali);
						Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setValue(obj.root.LName_Nepali);
						
						Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].setValue(obj.root.FName_Eng);
						Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setValue(obj.root.MName_Eng);
						Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setValue(obj.root.LName_Eng);
						Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setValue(obj.root.IdNumber);
						
						Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setReadOnly(true);
						Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setReadOnly(true);
						Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setReadOnly(true);
						Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].setReadOnly(true);
						Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setReadOnly(true);
						Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setReadOnly(true);
						Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setReadOnly(true);
						
					}
					else
					{
						msg('WARNING','Please Provide Valid PAN.',function(){
							Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativeFirstNameEng')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativePan')[0].setValue('');
							Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setReadOnly(false);
							Ext.ComponentQuery.query('#txtRelativeMiddleNameNep')[0].setReadOnly(false);
							Ext.ComponentQuery.query('#txtRelativeLastNameNep')[0].setReadOnly(false);
							Ext.ComponentQuery.query('#txtRelativeFirstNameNep')[0].setReadOnly(false);
							Ext.ComponentQuery.query('#txtRelativeMiddleNameEng')[0].setReadOnly(false);
							Ext.ComponentQuery.query('#txtRelativeLastNameEng')[0].setReadOnly(false);
							Ext.ComponentQuery.query('#txtRelativeCitizenshipNo')[0].setReadOnly(false);
							field.focus();
						});
					}
					
				},
				failure:function(response)
				{
					loadPan.hide();
					msg('FAILURE',Ext.decode(response));
				}
			});
		}
	},
	onDdlIndividualBankChange: function(field, newValue, oldValue, eOpts) {
		if(newValue != null)
		{
			var branchStore = Ext.getStore('Branch');
			branchStore.removeAll();
			var loadBank = waitMsg('Loading...');
			Ext.Ajax.request({
				url: '../Handlers/Common/BranchHandler.ashx?method=LoadBranch',
				params:{BankCode: newValue, BrnStatus: 'Y'},
				success: function ( result, request ) {
					var data = Ext.decode(result.responseText);
					loadBank.hide();
					branchStore.add(data.root);
				},
				failure: function ( result, request ) {
					loadBank.hide();
					msg('ERROR','Could not fetch bank branches.');
				}

			});
		}
    },
	
	onBtnResetMailingAddressClick: function(button, e, eOpts) {
		Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].setValue('0');
		Ext.ComponentQuery.query('#txtMailingVdc')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingTole')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingHouseNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingWard')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingArea')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingEmail')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingMobile')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingFax')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingWebsite')[0].setValue('');
        Ext.ComponentQuery.query('#txtMailingPOBNo')[0].setValue('');
		 
	},
	onBtnResetTempAddressClick: function(button, e, eOpts) {
		Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setValue('0');
        Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryTole')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryWard')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryEmail')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryMobile')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryFax')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].setValue('');
        Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].setValue('');
	},
	onBtnResetPermAddressClick: function(button, e, eOpts) {
		Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].setValue('0');
		Ext.ComponentQuery.query('#txtPermanentVdc')[0].setValue('');
        Ext.ComponentQuery.query('#txtPermanentVdcEng')[0].setValue('');
        Ext.ComponentQuery.query('#txtPermanentTole')[0].setValue('');
        Ext.ComponentQuery.query('#txtPermanentToleEng')[0].setValue('');
        Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtPermanentWard')[0].setValue('');
		Ext.ComponentQuery.query('#txtMobileNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtFax')[0].setValue('');
        Ext.ComponentQuery.query('#txtPOBNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtWebsite')[0].setValue('');
        Ext.ComponentQuery.query('#txtEmailID')[0].setValue('');
        Ext.ComponentQuery.query('#txtPhoneNo')[0].setValue('');
	},
	
	onTxtEmailIDBlur: function(field, eOpts) {
		var me =this;
		var email = field.getValue();
		if(email != null && email != '')
		{
			me.ValidateEmail(field);
		}
    },
	
	onTxtEmailIDOtherBlur: function(field, eOpts) {
		var me =this;
		var email = field.getValue();
		if(email != null && email != '')
		{
			me.ValidateEmail(field);
		}
    },
	
	onTxtTemporaryEmailBlur: function(field, eOpts) {
		var me =this;
		var email = field.getValue();
		if(email != null && email != '')
		{
			me.ValidateEmail(field);
		}
    },
	
	onTxtMailingEmailBlur: function(field, eOpts) {
		var me =this;
		var email = field.getValue();
		if(email != null && email != '')
		{
			me.ValidateEmail(field);
		}
    },
	
	onTxtMobileNoBlur: function(field, eOpts) {
		var me =this;
		var mobile = field.getValue();
		if(mobile != null && mobile != '')
		{
			me.ValidateMobile(field);
		}
	},
	
	onTxtTemporaryMobileBlur: function(field, eOpts) {
		var me =this;
		var mobile = field.getValue();
		if(mobile != null && mobile != '')
		{
			me.ValidateMobile(field);
		}
	},
	
	onTxtMailingMobileBlur: function(field, eOpts) {
		var me =this;
		var mobile = field.getValue();
		if(mobile != null && mobile != '')
		{
			me.ValidateMobile(field);
		}
	},
	
	ValidateEmail : function(field){
		if(field.isValid() === false)
		{
			msg('WARNING',field.activeErrors[0],function(){
				field.focus();
			});
		}
		else
		{
			return true;
		}
	},
	
	ValidateMobile  : function(field){
		var mobileNo = field.getValue();
		if(mobileNo.length != 10)
		{
			msg('WARNING','Please enter valid mobile number.',function(){
				field.focus();
				return false;
			});
		}
		else
		{
			var preMobile = mobileNo.substring(0,2);
			if(preMobile != "98")
			{
				msg('WARNING','Please enter valid mobile number.',function(){
					field.focus();
					return false;
				});
			}
		}
	},
	
	onChkSameAddrsTempChange: function(field, newValue, oldValue, eOpts) {
		var me = this;
		var tempVDCStore = Ext.getStore('VCD_PersonP_str');
		tempVDCStore.removeAll();
		if(!newValue)
		{
			Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setValue('');
			Ext.ComponentQuery.query('[name=TLocationType]')[0].setValue('MM');
			Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryTole')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryWard')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryEmail')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryMobile')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryFax')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].setValue('');
			Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].setValue('');
			
			/*Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryTole')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryWard')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryEmail')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryMobile')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryFax')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].setReadOnly(false);*/
			
		}
		else
		{
			me.CopyPermanentAddress('TEMP',function(obj){
			//	console.log('here',obj);
				Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setValue(obj.District);
				Ext.ComponentQuery.query('[name=TLocationType]')[0].setValue(obj.LocationType);
				Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setValue(obj.VdcTown);
				Ext.ComponentQuery.query('#txtTemporaryTole')[0].setValue(obj.Tole);
				Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setValue(obj.HouseNo);
				Ext.ComponentQuery.query('#txtTemporaryWard')[0].setValue(obj.Ward);
				Ext.ComponentQuery.query('#txtTemporaryEmail')[0].setValue(obj.Email);
				Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].setValue(obj.Phone);
				Ext.ComponentQuery.query('#txtTemporaryMobile')[0].setValue(obj.Mobile);
				Ext.ComponentQuery.query('#txtTemporaryFax')[0].setValue(obj.Fax);
				Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].setValue(obj.Website);
				Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].setValue(obj.PoBox);
				
				
				/*Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryTole')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryWard')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryEmail')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryMobile')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryFax')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].setReadOnly(true);*/
				var load = waitMsg('Loading...');
				LoadVDCMunicipalities(obj.District, obj.LocationType, null, function (obj) {
					load.hide();
					tempVDCStore.add(obj.root);
					Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setValue(obj.VdcTownCode);
				});
			});
		}
    },
	
	onChkSameAddMailingChange: function(field, newValue, oldValue, eOpts) {
		var me = this;
		var mailingVDCStore = Ext.getStore('MailingVDCStore');
		mailingVDCStore.removeAll();
		if(!newValue)
		{
			var mailingVDCStore = Ext.getStore('MailingVDCStore');
			mailingVDCStore.removeAll();
			Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].setValue('0');
			Ext.ComponentQuery.query('[name=MailingLocationType1]')[0].setValue('MM');
			Ext.ComponentQuery.query('#txtMailingTole')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingHouseNo')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingWard')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingEmail')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingMobile')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingFax')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingWebsite')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingPOBNo')[0].setValue('');
			Ext.ComponentQuery.query('#txtMailingVdc')[0].setValue('');
			
			/*Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingTole')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingHouseNo')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingWard')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingEmail')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingMobile')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingFax')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingWebsite')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingPOBNo')[0].setReadOnly(false);
			Ext.ComponentQuery.query('#txtMailingVdc')[0].setReadOnly(false);*/
		}
		else
		{
			me.CopyPermanentAddress('MAIL',function(obj){
				//console.log('here',obj);
				Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].setValue(obj.District);
				Ext.ComponentQuery.query('[name=MailingLocationType1]')[0].setValue(obj.LocationType);
				
				Ext.ComponentQuery.query('#txtMailingTole')[0].setValue(obj.Tole);
				Ext.ComponentQuery.query('#txtMailingHouseNo')[0].setValue(obj.HouseNo);
				Ext.ComponentQuery.query('#txtMailingWard')[0].setValue(obj.Ward);
				Ext.ComponentQuery.query('#txtMailingEmail')[0].setValue(obj.Email);
				Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].setValue(obj.Phone);
				Ext.ComponentQuery.query('#txtMailingMobile')[0].setValue(obj.Mobile);
				Ext.ComponentQuery.query('#txtMailingFax')[0].setValue(obj.Fax);
				Ext.ComponentQuery.query('#txtMailingWebsite')[0].setValue(obj.Website);
				Ext.ComponentQuery.query('#txtMailingPOBNo')[0].setValue(obj.PoBox);
				
				
				/*Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingTole')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingHouseNo')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingWard')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingEmail')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingMobile')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingFax')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingWebsite')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingPOBNo')[0].setReadOnly(true);
				Ext.ComponentQuery.query('#txtMailingVdc')[0].setReadOnly(true);*/
				//var load = waitMsg('Loading...');
				//LoadVDCMunicipalities(obj.District, obj.LocationType, null, function (obj) {
					//load.hide();
					//mailingVDCStore.add(obj.root);
					Ext.ComponentQuery.query('#txtMailingVdc')[0].setValue(obj.VdcTownCode);
				//});
			});
		}
    },
	
	CopyPermanentAddress : function(addressFor, callback){
		var permanentDistrict = Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].getValue();
		var permanentLocType = Ext.ComponentQuery.query('[name=PLocationType]')[0].getGroupValue();
		var permanentVDC = Ext.ComponentQuery.query('#txtPermanentVdc')[0];
		var permanentTole = Ext.ComponentQuery.query('#txtPermanentTole')[0].getValue();
		var permanentWard = Ext.ComponentQuery.query('#txtPermanentWard')[0].getValue();
		var permanentHouseNo = Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].getValue();
		var permanentEmail = Ext.ComponentQuery.query('#txtEmailID')[0].getValue();
		var permanentPhone = Ext.ComponentQuery.query('#txtPhoneNo')[0].getValue();
		var permanentMobile = Ext.ComponentQuery.query('#txtMobileNo')[0].getValue();
		var permanentFax = Ext.ComponentQuery.query('#txtFax')[0].getValue();
		var permanentPOBox = Ext.ComponentQuery.query('#txtPOBNo')[0].getValue();
		var permanentWebsite = Ext.ComponentQuery.query('#txtWebsite')[0].getValue();
		var err = '';
		if(permanentDistrict == '0' || permanentDistrict == '' || permanentDistrict == null)
		{
			err +=  'Please Select District in Permanent Address.<br>';
		}
		if(permanentLocType == 'on' || permanentLocType == null)
		{
			err +=  'Please Select Location Type in Permanent Address.<br>';
		}
		if(permanentVDC.getValue() == '' || permanentVDC.getValue() == null)
		{
			err +=  'Please Select VDC in Permanent Address.<br>';
		}
		if(permanentTole == '' || permanentTole == null)
		{
			err +=  'Please Enter Tole in Permanent Address.<br>';
		}
		if(permanentWard == '' || permanentWard == null)
		{
			err +=  'Please Enter Ward in Permanent Address.<br>';
		}
		if(permanentMobile == '' || permanentMobile == null)
		{
			err += 'Please Enter Mobile in Permanent Address.<br>';
		}
		if(err != '')
		{
			msg('WARNING',err.toString(),function(){
				if(addressFor =='TEMP')
					Ext.ComponentQuery.query('#chkSameAddTemp')[0].setValue(false);
				if(addressFor =='MAIL')
					Ext.ComponentQuery.query('#chkSameAddMailing')[0].setValue(false);
				return false;
			});
		}
		else
		{
			var permanentAddress = {
				District: permanentDistrict,
				LocationType : permanentLocType,
				VdcTown : permanentVDC.getRawValue(),
				VdcTownCode : permanentVDC.getValue(),
				Tole: permanentTole,
				Ward: permanentWard,
				HouseNo : permanentHouseNo,
				Email : permanentEmail,
				Phone : permanentPhone,
				Mobile : permanentMobile,
				Fax: permanentFax,
				PoBox: permanentPOBox,
				Website: permanentWebsite
			};
			callback(permanentAddress);
		}
	},
	
	onChkAlertPermanentAddrsChange: function(field, newValue, oldValue, eOpts) {
		if(newValue)
		{
			Ext.ComponentQuery.query('#chkAlertMailingAddrs')[0].setValue(false);
			Ext.ComponentQuery.query('#chkAlertTemporaryAddrs')[0].setValue(false);
		}
    },
	
	onChkAlertTemporaryAddrsChange: function(field, newValue, oldValue, eOpts) {
		if(newValue)
		{
			Ext.ComponentQuery.query('#chkAlertPermanentAddrs')[0].setValue(false);
			Ext.ComponentQuery.query('#chkAlertMailingAddrs')[0].setValue(false);
		}
    },
	
	onChkAlertMailingAddrsChange: function(field, newValue, oldValue, eOpts) {
		if(newValue)
		{
			Ext.ComponentQuery.query('#chkAlertPermanentAddrs')[0].setValue(false);
			Ext.ComponentQuery.query('#chkAlertTemporaryAddrs')[0].setValue(false);
		}
    },
	
	onRdbAlertSMSChange: function(field, newValue, oldValue, eOpts) {
		/*if(newValue)
		{
			var addressType = Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getValue();
			if(addressType == null && addressType == '')
			{
				msg('WARNING','Please check desired address type.');
				return false;
			}
			else
			{
				var permanentMobile = Ext.ComponentQuery.query('#txtMobileNo')[0].getValue();
				var temporaryMobile = Ext.ComponentQuery.query('#txtTemporaryMobile')[0].getValue();
				var mailingMobile = Ext.ComponentQuery.query('#txtMailingMobile')[0].getValue();
				if(addressType=='P' && permanentMobile  != '' && permanentMobile != null)
				{
					return true;
				}
				else if(addressType=='T' && temporaryMobile  != '' && temporaryMobile != null)
				{
					return true;
				}
				else if(addressType=='M' && mailingMobile  != '' && mailingMobile != null)
				{
					return true;
				}
				else
				{
					msg('WARNING','Please enter Mobile no. of '+Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getRawValue(),function(){
						if(addressType=='P')
						{
							Ext.ComponentQuery.query('#txtMobileNo')[0].focus();
						}
						else if(addressType=='T')
						{
							Ext.ComponentQuery.query('#txtTemporaryMobile')[0].focus();
						}
						else
						{
							Ext.ComponentQuery.query('#txtMailingMobile')[0].focus();
						}
						return false;
					});
					
				}
			}
		}*/
    },
	
	onRdbAlertEmailChange: function(field, newValue, oldValue, eOpts) {
		/*if(newValue)
		{
			var addressType = Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getValue();
			if(addressType == null && addressType == '')
			{
				msg('WARNING','Please check desired address type.');
				return false;
			}
			else
			{
				var permanentMobile = Ext.ComponentQuery.query('#txtEmailID')[0].getValue();
				var temporaryMobile = Ext.ComponentQuery.query('#txtTemporaryEmail')[0].getValue();
				var mailingMobile = Ext.ComponentQuery.query('#txtMailingEmail')[0].getValue();
				if(addressType=='P' && permanentMobile  != '' && permanentMobile != null)
				{
					return true;
				}
				else if(addressType=='T' && temporaryMobile  != '' && temporaryMobile != null)
				{
					return true;
				}
				else if(addressType=='M' && mailingMobile  != '' && mailingMobile != null)
				{
					return true;
				}
				else
				{
					msg('WARNING','Please enter Email of '+Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getRawValue(),function(){
						if(addressType=='P')
						{
							Ext.ComponentQuery.query('#txtEmailID')[0].focus();
						}
						else if(addressType=='T')
						{
							Ext.ComponentQuery.query('#txtTemporaryEmail')[0].focus();
						}
						else
						{
							Ext.ComponentQuery.query('#txtMailingEmail')[0].focus();
						}
						return false;
					});
				}
			}
		}*/
    },
	
	SavePPAN : function(callback){
		var me = this;
		var pnlPersonRegistration = Ext.getCmp('PersonRegistration');
		var nepServerDate = document.getElementById('nepDate').innerHTML;
		var submissionNo = "";
		var businessTyp = "";
		var busSubTyp = "";
		var regFor = "";

		if (pnlPersonRegistration.extraParam) {
			submissionNo = pnlPersonRegistration.extraParam.subNo;
			businessTyp = pnlPersonRegistration.extraParam.busTyp;
			busSubTyp = pnlPersonRegistration.extraParam.busSubTyp;
			regFor = pnlPersonRegistration.extraParam.regFor;
		}

		var firstNameNepali = Ext.ComponentQuery.query('#txtPersonFNameNep')[0].getValue();
		var middleNameNepali = Ext.ComponentQuery.query('#txtPersonMNameNep')[0].getValue();
		var lastNameNepali = Ext.ComponentQuery.query('#txtPersonLNameNep')[0].getValue();
		var firstNameEnglish = Ext.ComponentQuery.query('#txtPersonFNameEng')[0].getValue();
		var middleNameEnglish = Ext.ComponentQuery.query('#txtPersonMNameEng')[0].getValue();
		var lastNameEnglish = Ext.ComponentQuery.query('#txtPersonLNameEng')[0].getValue();
		var gender = Ext.ComponentQuery.query('[name=rdogender]')[0].getGroupValue();
		var nationality = Ext.ComponentQuery.query('#cboNationality')[0].getValue();
		var dob = Ext.ComponentQuery.query('#txtDob')[0].getValue();
		var dobDateType = Ext.ComponentQuery.query('[name=rdoDate]')[0].getGroupValue();
		var residencyType = Ext.ComponentQuery.query('#ddlResidencyType')[0].getValue();
		var personPhoto = Ext.getCmp('sespicid').getValue();

		var profListStore = Ext.getStore('PerReg_TaxPayerProfession');
		profListStore.clearFilter();
		var profList = getJson(profListStore);
		profListStore.filter(function (item) {
			return item.get("Action") != 'D';
		});

		var permanentAddress = null;
		if (nationality !== "np") {
			var address = {
				AddressSNO: 0,
				HouseNo: null,
				WardNo: 0,
				StreetName: Ext.ComponentQuery.query('#txtPermanentToleEngOther')[0].getValue(),
				StreetNameEng: Ext.ComponentQuery.query('#txtPermanentToleEngOther')[0].getValue(),
				VdcTownEng: Ext.ComponentQuery.query('#txtCity')[0].getValue(),
				VdcTown: Ext.ComponentQuery.query('#txtCity')[0].getValue(),
				LocationType: 'NN',
				DistrictCode: 'NN',
				Telephone: Ext.ComponentQuery.query('#txtPhoneNoOther')[0].getValue(),
				AreaCode: '00',
				Email: Ext.ComponentQuery.query('#txtEmailIDOther')[0].getValue(),
				Mobile: Ext.ComponentQuery.query('#txtMobileNoOther')[0].getValue(),
				Fax: Ext.ComponentQuery.query('#txtFaxOther')[0].getValue(),
				PoBox: Ext.ComponentQuery.query('#txtPOBNoOther')[0].getValue(),
				Website: Ext.ComponentQuery.query('#txtWebsiteOther')[0].getValue(),
				AddressType: 'FP',
				ZipCode: Ext.ComponentQuery.query('#txtZipCodeOther')[0].getValue(),
				VdcTownCode: 'NN',
				CountryCode: nationality,
				State: Ext.ComponentQuery.query('#txtState')[0].getValue()
			};
			permanentAddress = {
				From_Date: nepServerDate,
				status: '1',
				AddressType: 'FP',
				Address: address
			};
		} else {
			var permanentDistrict = Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].getValue();
			var permanentVdcTownNep = Ext.ComponentQuery.query('#txtPermanentVdc')[0];
			if (permanentDistrict != "0" && permanentDistrict != null && permanentDistrict != '' && permanentVdcTownNep.getValue() != '' && permanentVdcTownNep.getValue() != null) {
				var locationType = "";
				if (Ext.ComponentQuery.query('#PerRegRerm_LocationType1')[0].checked) {
					locationType = "MM";
				} else if (Ext.ComponentQuery.query('#PerRegRerm_LocationType2')[0].checked) {
					locationType = "SM";
				} else if (Ext.ComponentQuery.query('#PerRegRerm_LocationType3')[0].checked) {
					locationType = "MN";
				} else if (Ext.ComponentQuery.query('#PerRegRerm_LocationType4')[0].checked) {
					locationType = "RM";
				}

				var address = {
					AddressSNO: 0,
					HouseNo: Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].getValue(),
					WardNo: Ext.ComponentQuery.query('#txtPermanentWard')[0].getValue(),
					StreetName: Ext.ComponentQuery.query('#txtPermanentTole')[0].getValue(),
					StreetNameEng: Ext.ComponentQuery.query('#txtPermanentToleEng')[0].getValue(),
					VdcTownEng: Ext.ComponentQuery.query('#txtPermanentVdcEng')[0].getValue(),
					VdcTown: permanentVdcTownNep.getRawValue(),
					LocationType: locationType,
					DistrictCode: permanentDistrict,
					Telephone: Ext.ComponentQuery.query('#txtPhoneNo')[0].getValue(),
					AreaCode: '00',
					Email: Ext.ComponentQuery.query('#txtEmailID')[0].getValue(),
					Mobile: Ext.ComponentQuery.query('#txtMobileNo')[0].getValue(),
					Fax: Ext.ComponentQuery.query('#txtFax')[0].getValue(),
					PoBox: Ext.ComponentQuery.query('#txtPOBNo')[0].getValue(),
					Website: Ext.ComponentQuery.query('#txtWebsite')[0].getValue(),
					AddressType: 'P',
					VdcTownCode: permanentVdcTownNep.getValue(),
					CountryCode: 'np',
				};
				permanentAddress = {
					From_Date: nepServerDate,
					status: '1',
					AddressType: 'P',
					Address: address
				};
			}

		}

		var mailingDistrict = Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].getValue();
		var mailingVdc = Ext.ComponentQuery.query('#txtMailingVdc')[0];
		var mailingTole = Ext.ComponentQuery.query('#txtMailingTole')[0].getValue();
		var mailingHouseNo = Ext.ComponentQuery.query('#txtMailingHouseNo')[0].getValue();
		var mailingWard = Ext.ComponentQuery.query('#txtMailingWard')[0].getValue();
		var mailingArea = Ext.ComponentQuery.query('#txtMailingArea')[0].getValue();
		var mailingEmail = Ext.ComponentQuery.query('#txtMailingEmail')[0].getValue();
		var mailingPhone = Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].getValue();
		var mailingMobile = Ext.ComponentQuery.query('#txtMailingMobile')[0].getValue();
		var mailingFax = Ext.ComponentQuery.query('#txtMailingFax')[0].getValue();
		var mailingWebsite = Ext.ComponentQuery.query('#txtMailingWebsite')[0].getValue();
		var mailingPOBNo = Ext.ComponentQuery.query('#txtMailingPOBNo')[0].getValue();

		var mailingLocationType = "";
		if (Ext.ComponentQuery.query('#rdbMailingLocationLocationType1')[0].checked) {
			mailingLocationType = "MM";
		} else if (Ext.ComponentQuery.query('#rdbMailingLocationType2')[0].checked) {
			mailingLocationType = "SM";
		} else if (Ext.ComponentQuery.query('#rdbMailingLocationType3')[0].checked) {
			mailingLocationType = "MN";
		} else if (Ext.ComponentQuery.query('#rdbMailingLocationType4')[0].checked) {
			mailingLocationType = "RM";
		}
		var mailingAddress = null;
		if (mailingDistrict != '0' && mailingDistrict != null && mailingDistrict != '' && mailingVdc.getValue() != '' && mailingVdc.getValue() != null) {
			var mailAddress = {
				AddressSNO: 0,
				HouseNo: mailingHouseNo,
				WardNo: mailingWard,
				StreetName: mailingTole,
				VdcTown: mailingVdc.getRawValue(),
				LocationType: mailingLocationType,
				DistrictCode: mailingDistrict,
				Telephone: mailingPhone,
				AreaCode: '00',
				Email: mailingEmail,
				Mobile: mailingMobile,
				Fax: mailingFax,
				PoBox: mailingPOBNo,
				Website: mailingWebsite,
				AddressType: 'M',
				VdcTownCode: mailingVdc.getValue(),
				CountryCode: 'np',
			};
			mailingAddress = {
				From_Date: nepServerDate,
				status: '1',
				AddressType: 'M',
				Address: mailAddress
			};
		}

		var locationType1 = "";
		if (Ext.ComponentQuery.query('#PerRegTemp_LocationType1')[0].checked) {
			locationType1 = "MM";
		} else if (Ext.ComponentQuery.query('#PerRegTemp_LocationType2')[0].checked) {
			locationType1 = "SM";
		} else if (Ext.ComponentQuery.query('#PerRegTemp_LocationType3')[0].checked) {
			locationType1 = "MN";
		} else if (Ext.ComponentQuery.query('#PerRegTemp_LocationType4')[0].checked) {
			locationType1 = "RM";
		}

		var cboTemporaryDiscrict = Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].getValue();
		var txtTemporaryVdc = Ext.ComponentQuery.query('#txtTemporaryVdc')[0];
		var txtTemporaryTole = Ext.ComponentQuery.query('#txtTemporaryTole')[0].getValue();
		var txtTemporaryHouseNo = Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].getValue();
		var txtTemporaryWard = Ext.ComponentQuery.query('#txtTemporaryWard')[0].getValue();

		var txtTemporaryEmail = Ext.ComponentQuery.query('#txtTemporaryEmail')[0].getValue();
		var txtTemporaryPhoneNo = Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].getValue();
		var txtTemporaryMobile = Ext.ComponentQuery.query('#txtTemporaryMobile')[0].getValue();
		var txtTemporaryFax = Ext.ComponentQuery.query('#txtTemporaryFax')[0].getValue();
		var txtTemporaryWebsite = Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].getValue();
		var txtTemporaryPOBNo = Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].getValue();

		var temporaryAddress = null;
		if (cboTemporaryDiscrict != "0" && cboTemporaryDiscrict != null && cboTemporaryDiscrict != '' && txtTemporaryVdc.getValue() != '' && txtTemporaryVdc.getValue() != null) {
			var tempAddress = {
				AddressSNO: 0,
				HouseNo: txtTemporaryHouseNo,
				WardNo: txtTemporaryWard,
				StreetName: txtTemporaryTole,
				VdcTown: txtTemporaryVdc.getRawValue(),
				LocationType: locationType1,
				DistrictCode: cboTemporaryDiscrict,
				Telephone: txtTemporaryPhoneNo,
				AreaCode: '00',
				Email: txtTemporaryEmail,
				Mobile: txtTemporaryMobile,
				Fax: txtTemporaryFax,
				PoBox: txtTemporaryPOBNo,
				Website: txtTemporaryWebsite,
				AddressType: 'T',
				VdcTownCode: txtTemporaryVdc.getValue(),
				CountryCode: 'np',
			};
			temporaryAddress = {
				From_Date: nepServerDate,
				status: '1',
				AddressType: 'T',
				Address: tempAddress
			};

		}
		var documentStore = Ext.getStore('DocType');
		documentStore.each(function(record){     
			record.set('Document',null);    
		});
		var docList = getJson(documentStore);

		var profListStore = Ext.getStore('PerReg_TaxPayerProfession');
		profListStore.clearFilter();
		var profList = getJson(profListStore);
		profListStore.filter(function (item) {
			return item.get("Action") != 'D';
		});

		var individualRelatives = null;
		if (Ext.getStore('IndividualRelativeStore').count() > 0)
			individualRelatives = getJson(Ext.getStore('IndividualRelativeStore'));

		var saveAction = Ext.ComponentQuery.query('#PersonalPanAction')[0].getValue();

		var sourceOfIncomeArr = [];
		var objSOI;
		if (Ext.ComponentQuery.query('#chkSourceOfIncomeEmployment')[0].checked) {
			objSOI = null;
			objSOI = {
				SourceOfIncomeTypeId: Ext.ComponentQuery.query('#chkSourceOfIncomeEmployment')[0].inputValue,
				FromDate: nepServerDate
			};
			sourceOfIncomeArr.push(objSOI);
		}
		if (Ext.ComponentQuery.query('#chkSourceOfIncomeInvestment')[0].checked) {
			objSOI = null;
			objSOI = {
				SourceOfIncomeTypeId: Ext.ComponentQuery.query('#chkSourceOfIncomeInvestment')[0].inputValue,
				FromDate: nepServerDate
			};
			sourceOfIncomeArr.push(objSOI);
		}
		if (Ext.ComponentQuery.query('#chkSourceOfIncomeBusiness')[0].checked) {
			objSOI = null;
			objSOI = {
				SourceOfIncomeTypeId: Ext.ComponentQuery.query('#chkSourceOfIncomeBusiness')[0].inputValue,
				FromDate: nepServerDate
			};
			sourceOfIncomeArr.push(objSOI);
		}
		if (Ext.ComponentQuery.query('#chkSourceOfIncomeOccupation')[0].checked) {
			objSOI = null;
			objSOI = {
				SourceOfIncomeTypeId: Ext.ComponentQuery.query('#chkSourceOfIncomeOccupation')[0].inputValue,
				FromDate: nepServerDate
			};
			sourceOfIncomeArr.push(objSOI);
		}
		if (Ext.ComponentQuery.query('#chkSourceOfIncomeOthers')[0].checked) {
			if (Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].getValue() == '' || Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].getValue() == null) {
				msg('WARNING', 'Please Fill Others Source of Income.');
				return false;
			} else {
				objSOI = null;
				objSOI = {
					SourceOfIncomeTypeId: Ext.ComponentQuery.query('#chkSourceOfIncomeOthers')[0].inputValue,
					FromDate: nepServerDate,
					SourceOfIncomeTypeDesc: Ext.ComponentQuery.query('#txtSourceofIncomeOthers')[0].getValue()
				};
				sourceOfIncomeArr.push(objSOI);
			}
		}

		var indvBank = Ext.ComponentQuery.query('#ddlIndividualBank')[0].getValue();
		var indvBankBranch = Ext.ComponentQuery.query('#ddlIndividualBankBranch')[0].getValue();
		var indvBankAccNo = Ext.ComponentQuery.query('#txtIndividualBankAccNo')[0].getValue();
		var objBankInfo = null;
		if (indvBank != '' && indvBankAccNo != '') {
			objBankInfo = {
				BankCode: indvBank,
				BankBranchCode: indvBankBranch,
				BankAccountNo: indvBankAccNo,
				Status: 'A'
			};
		}

		var preferredAddressType = Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].getValue();
		var preferredSMS = Ext.ComponentQuery.query('#rdbAlertSMS')[0].getValue();
		var preferredEmail = Ext.ComponentQuery.query('#rdbAlertEmail')[0].getValue();

		var lstPreferredAlertService = [];
		if (preferredSMS) {
			var objPreferredAlertService = {
				ServiceTypeName: 'SMS',
				FromDate: nepServerDate,
				Status: 'A',
				RegistrationFor: 'PPAN',
				AddressType: preferredAddressType
			};
			lstPreferredAlertService.push(objPreferredAlertService);
		} 
		if (preferredEmail) {
			var objPreferredAlertService1 = {
				ServiceTypeName: 'EMAIL',
				FromDate: nepServerDate,
				Status: 'A',
				RegistrationFor: 'PPAN',
				AddressType: preferredAddressType
			};
			lstPreferredAlertService.push(objPreferredAlertService1);
		}
		
		
		var personEPan = {
			SubmissionNo: submissionNo,
			TaxpayerCatId: businessTyp,
			TaxpayerType: busSubTyp,
			TranDate: null,
			FName_Nepali: firstNameNepali,
			MName_Nepali: middleNameNepali,
			LName_Nepali: lastNameNepali,
			FName_Eng: firstNameEnglish,
			MName_Eng: middleNameEnglish,
			LName_Eng: lastNameEnglish,
			Sex: gender,
			Nationality: nationality,
			DOB: dob,
			DateType: dobDateType,
			photo: Ext.getCmp('sespicid').getValue(),
			PermanentAddress: permanentAddress,
			MailingAddress: mailingAddress,
			LstDocument: docList,
			TemporaryAddress: temporaryAddress,
			TaxpayerProfessions: profList,
			Action: saveAction,
			IndividualRelativeDetails: individualRelatives,
			ResidencyType: residencyType,
			IndividualSourceOfIncomes: sourceOfIncomeArr,
			IndividualBankAccInformation: objBankInfo,
			PreferredAlertService: lstPreferredAlertService
		};
		//console.log('personEPan',personEPan);
		
		var checkIndividualMsg = waitMsg('Saving Personal Information. Please wait...');
		Ext.Ajax.request({
			url: '../Handlers/Registration/PersonEPanHandler.ashx?method=SavePersonEPan',
			params: {
				personEPan: JSON.stringify(personEPan),
				formToken: Ext.get('frmToken').dom.innerHTML
			},
			success: function (response) {
				checkIndividualMsg.hide();
				var resp = Ext.decode(response.responseText);
				if (resp.root.Success === 'True' || resp.root.Success === 'true' || resp.root.Success === true) {
					msg("Status", "Personal Information Saved Successfully.", function (obj) {
						Ext.ComponentQuery.query('#PersonalPanAction')[0].setValue('E');

						if (regFor == 2 || regFor == 3 || regFor == 4 || regFor == 5 || regFor == 6 || regFor == 7 || regFor == 8) {
							Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].enable();
							Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].show();
						} else {
							Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].disable();
							Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].hide();
						}
						callback(resp.root);
					});

				} else {
					msg("WARNING", resp.root.Message);
				}
			},
			failure: function (result, request) {
				checkIndividualMsg.hide();
				msg("FAILURE", "Personal Information Saving Failed.");
			}

		});

				


	},
	
	PPANValidation : function(callback){
		var firstNameNepali = Ext.ComponentQuery.query('#txtPersonFNameNep')[0].getValue();
		var lastNameNepali = Ext.ComponentQuery.query('#txtPersonLNameNep')[0].getValue();
		var firstNameEnglish = Ext.ComponentQuery.query('#txtPersonFNameEng')[0].getValue();
		var lastNameEnglish = Ext.ComponentQuery.query('#txtPersonLNameEng')[0].getValue();
		var gender = Ext.ComponentQuery.query('[name=rdogender]')[0].getGroupValue();
		var nationality = Ext.ComponentQuery.query('#cboNationality')[0].getValue();
		var dob = Ext.ComponentQuery.query('#txtDob')[0].getValue();
		var dobDateType = Ext.ComponentQuery.query('[name=rdoDate]')[0].getGroupValue();
		var permanentDistrict = Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].getValue();
		var permanentVdcTownNep = Ext.ComponentQuery.query('#txtPermanentVdc')[0].getValue();
		
		var foreignState = Ext.ComponentQuery.query('#txtState')[0].getValue();
		var foreignCity = Ext.ComponentQuery.query('#txtCity')[0].getValue();
		var foreignStreet = Ext.ComponentQuery.query('#txtPermanentToleEngOther')[0].getValue();
	
		var err = '';
		if(firstNameNepali == null || firstNameNepali == '')
			err+='Please enter First Name in Nepali.<br>';
		if(lastNameNepali == null || lastNameNepali == '')
			err+='Please enter Last Name in Nepali.<br>';
		if(firstNameEnglish == null || firstNameEnglish == '')
			err+='Please enter First Name in English.<br>';
		if(lastNameEnglish == null || lastNameEnglish == '')
			err+='Please enter Last Name  in English.<br>';
		if(gender == null || gender == '')
			err+='Please select Gender.<br>';
		
		if(nationality == null || nationality == ''){
			err+='Please select Nationality.<br>';
		}
		else{
			if(nationality == 'np')
			{
				var citizenshipRecord = Ext.getStore('DocType').data.items[0].data;
				if(citizenshipRecord.IdIssueAuthority == '' || citizenshipRecord.IdIssueAuthority == null)
				{
					err+='Please enter Citizenship Issue Authority.<br>';	
				}
				if(citizenshipRecord.IdIssueDate == '' || citizenshipRecord.IdIssueDate == null)
				{
					err+='Please enter Citizenship Issued Date.<br>';
				}
				if(citizenshipRecord.IdIssuePlace == '' || citizenshipRecord.IdIssuePlace == null)
				{
					err+='Please enter Citizenship Issued Place.<br>';
				}
				if(citizenshipRecord.IdNumber == '' || citizenshipRecord.IdNumber == null)
				{
					err+='Please enter Citizenship Issue Number.<br>';
				}
				if(citizenshipRecord.DocName == '' || citizenshipRecord.DocName == null)
				{
					err+='Please upload Citizenship Document.<br>';
				}
				if(permanentDistrict == '0' || permanentDistrict == '' || permanentDistrict == null || permanentVdcTownNep == '' || permanentVdcTownNep == null)
				{
					err+='Please enter Permanent Address information.<br>';
				}
				
			}
			else
			{
				var documentErr = 0;
				var passportRecord = Ext.getStore('DocType').data.items[1].data;
				if(passportRecord.IdIssueAuthority == '' || passportRecord.IdIssueAuthority == null || passportRecord.IdIssueDate == '' || passportRecord.IdIssueDate == null || passportRecord.IdIssuePlace == '' || passportRecord.IdIssuePlace == null || passportRecord.IdNumber == '' || passportRecord.IdNumber == null || passportRecord.DocName == '' || passportRecord.DocName == null)
				{
					documentErr++;
				}
				var embassyRecord = Ext.getStore('DocType').data.items[2].data;
				if(embassyRecord.IdIssueAuthority == '' || embassyRecord.IdIssueAuthority == null || embassyRecord.IdIssueDate == '' || embassyRecord.IdIssueDate == null || embassyRecord.IdIssuePlace == '' || embassyRecord.IdIssuePlace == null || embassyRecord.IdNumber == '' || embassyRecord.IdNumber == null || embassyRecord.DocName == '' || embassyRecord.DocName == null)
				{
					documentErr++;
				}
				var workPermitRecord = Ext.getStore('DocType').data.items[4].data;
				if(workPermitRecord.IdIssueAuthority == '' || workPermitRecord.IdIssueAuthority == null || workPermitRecord.IdIssueDate == '' || workPermitRecord.IdIssueDate == null || workPermitRecord.IdIssuePlace == '' || workPermitRecord.IdIssuePlace == null || workPermitRecord.IdNumber == '' || workPermitRecord.IdNumber == null || workPermitRecord.DocName == '' || workPermitRecord.DocName == null)
				{
					documentErr++;
				}
				if(documentErr >= 3)
				{
					err+='Either Passport or Embassay or Work Permit Information Is Required For Non Nepalese Citizen.<br>';
				}
				if(foreignState == '' || foreignState == null || foreignCity == '' || foreignCity == null || foreignStreet == '' || foreignStreet == null)
				{
					err+='Please enter Permanent Address information.<br>';  
				}
			}
		}
		callback(err);
	},
	
	ClearControls: function(callback){
		Ext.getStore('DistrictRegistration').removeAll();
		Ext.getStore('VCD_PersonP_str').removeAll();
		Ext.getStore('VCD_PersonT_str').removeAll();
		Ext.getStore('MailingVDCStore').removeAll();
		Ext.getStore('Banks').removeAll();
		Ext.getStore('Branch').removeAll();
		Ext.getStore('IndividualRelativeStore').removeAll();
		Ext.getStore('PerReg_TaxPayerProfession').removeAll();

		Ext.getCmp('sespicid').setValue('');
		Ext.ComponentQuery.query('#txtPersonFNameNep')[0].setValue('');
		Ext.ComponentQuery.query('#txtPersonMNameNep')[0].setValue('');
		Ext.ComponentQuery.query('#txtPersonLNameNep')[0].setValue('');
		Ext.ComponentQuery.query('#txtPersonFNameEng')[0].setValue('');
		Ext.ComponentQuery.query('#txtPersonMNameEng')[0].setValue('');
		Ext.ComponentQuery.query('#txtPersonLNameEng')[0].setValue('');
		Ext.ComponentQuery.query('[name=rdoDate]')[0].getGroupValue('BS');
		Ext.ComponentQuery.query('#cboNationality')[0].setValue('np');
		Ext.ComponentQuery.query('#txtDob')[0].setValue('');
		Ext.ComponentQuery.query('[name=rdogender]')[0].setValue('M');
		Ext.ComponentQuery.query('#ddlResidencyType')[0].setValue('');

		Ext.ComponentQuery.query('#txtPermanentToleEngOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtPermanentToleEngOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtCity')[0].setValue('');
		Ext.ComponentQuery.query('#txtCity')[0].setValue('');
		Ext.ComponentQuery.query('#txtPhoneNoOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtEmailIDOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtMobileNoOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtFaxOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtPOBNoOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtWebsiteOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtZipCodeOther')[0].setValue('');
		Ext.ComponentQuery.query('#txtState')[0].setValue('');
		Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].setValue('');
		Ext.ComponentQuery.query('#txtPermanentVdc')[0].reset();
		Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtPermanentWard')[0].setValue('');
		Ext.ComponentQuery.query('#txtPermanentTole')[0].setValue('');
		Ext.ComponentQuery.query('#txtPermanentToleEng')[0].setValue('');
		Ext.ComponentQuery.query('#txtPermanentVdcEng')[0].setValue('');
		Ext.ComponentQuery.query('#txtPhoneNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtEmailID')[0].setValue('');
		Ext.ComponentQuery.query('#txtMobileNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtFax')[0].setValue('');
		Ext.ComponentQuery.query('#txtPOBNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtWebsite')[0].setValue('');

		Ext.ComponentQuery.query('#ddlMailingDiscrict')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingVdc')[0].reset();
		Ext.ComponentQuery.query('#txtMailingTole')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingHouseNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingWard')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingArea')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingEmail')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingPhoneNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingMobile')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingFax')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingWebsite')[0].setValue('');
		Ext.ComponentQuery.query('#txtMailingPOBNo')[0].setValue('');

		Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryVdc')[0].reset();
		Ext.ComponentQuery.query('#txtTemporaryTole')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryWard')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryEmail')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryPhoneNo')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryMobile')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryFax')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryWebsite')[0].setValue('');
		Ext.ComponentQuery.query('#txtTemporaryPOBNo')[0].setValue('');
		
		Ext.ComponentQuery.query('#ddlPreferredAddressType')[0].setValue('P');
		Ext.ComponentQuery.query('#rdbAlertSMS')[0].setValue(false);
		Ext.ComponentQuery.query('#rdbAlertEmail')[0].setValue('');
		callback(true);
	},
	
    init: function(application) {
        this.control({
            "#btnProfession": {
                click: this.onBtnProfessionClick,
                click: this.onBtnProfessionClick
            },
			"#rdbAlertSMS": {
                change: this.onRdbAlertSMSChange
            },
			"#rdbAlertEmail": {
                change: this.onRdbAlertEmailChange
            },
			"#chkAlertPermanentAddrs": {
                change: this.onChkAlertPermanentAddrsChange
            },
			"#chkAlertTemporaryAddrs": {
                change: this.onChkAlertTemporaryAddrsChange
            },
			"#chkAlertMailingAddrs": {
                change: this.onChkAlertMailingAddrsChange
            },
			"#chkSameAddTemp": {
                change: this.onChkSameAddrsTempChange
            },
			"#chkSameAddMailing": {
                change: this.onChkSameAddMailingChange
            },
			"#txtMobileNo": {
                blur: this.onTxtMobileNoBlur
            },
			"#txtTemporaryMobile": {
                blur: this.onTxtTemporaryMobileBlur
            },
			"#txtMailingMobile": {
                blur: this.onTxtMailingMobileBlur
            },
			"#txtEmailID": {
                blur: this.onTxtEmailIDBlur
            },
			"#txtEmailIDOther": {
                blur: this.onTxtEmailIDOtherBlur
            },
			"#txtTemporaryEmail": {
                blur: this.onTxtTemporaryEmailBlur
            },
			"#txtMailingEmail": {
                blur: this.onTxtMailingEmailBlur
            },
            "#btnUpload_Epan": {
                click: this.onBtnUpload_EpanClick
            },
			"#btnResetPermAddress": {
                click: this.onBtnResetPermAddressClick
            },
			"#btnResetTempAddress": {
                click: this.onBtnResetTempAddressClick
            },
			"#btnResetMailingAddress": {
                click: this.onBtnResetMailingAddressClick
            },
            "#btnSave": {
                click: this.onBtnSaveClick
            },
            "#filePhoto": {
                change: this.onFilePhotoChange
            },
            "#btnSubmit": {
                click: this.onBtnSubmitClick
            },
            "#ppan_print": {
                click: this.onPpan_printClick
            },
            "#PPAN_Reg_Next": {
                click: this.onPPAN_Reg_NextClick
            },
            "#PerReg_ProfCat": {
                collapse: this.onPerReg_ProfCatCollapse
            },
            "#PerReg_btnAddProf": {
                click: this.onPerReg_btnAddProfClick
            },
            "#PersonRegistration": {
                afterrender: this.onFormAfterRender
            },
			"#cboNationality": {
                change: this.onCboNationalityChange
            },
			"#btnAddRelatives": {
                click: this.onBtnAddRelativesClick
            },
			"#chkSourceOfIncomeOthers": {
                change: this.onChkSourceOfIncomeOthersChange
            },
			"#txtRelativePan": {
                blur: this.onTxtRelativePanBlur
            },
			"#ddlIndividualBank": {
                change: this.onDdlIndividualBankChange
            }
        });
    }

});
